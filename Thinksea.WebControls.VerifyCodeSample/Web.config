<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="VerifyCode" type="System.Configuration.NameValueSectionHandler"/>
  </configSections>
  <!--
此配置节用于设置验证码信息。
VerifyCodeEnumerable：验证码元数据序列。相邻的验证码元数据使用逗号（英文半角）分隔。系统保留字符用作系统解释或未来扩展使用，这些保留字符包括{逗号“,”、等号“=”、管道符号“|”、反斜线“\”、分号“;”、冒号“:”}。
    目前验证码元数据包含字符型验证码与键值对验证码两种类型。
    字符型验证码：随机组合这些字符组成符合指定长度的验证码。
    键值对验证码：键表示问题，用于表示验证码，值用于表示答案。键与值之间使用等号“=”分隔。
Length：字符型验证码长度。
BendingAngle：图片扭曲程度，默认值为8。
FontSize：验证码字体大小。设置太小的字体可能无法显示扭曲效果。
Padding：内容和图片边缘之间保留的空白大小(默认2像素)。
ForeColors：验证码文本随机颜色数组(使用逗号分隔)。
BackColor：背景填充颜色。
Fonts：验证码文本随机字体数组(使用逗号分隔)。
DebugMode：指示是否开启调试模式。当设置为 True 时，则表示开启调试模式，此时当用户输入的验证码中的每一位都是零时可无条件通过验证。
-->
  <VerifyCode>
    <add key="VerifyCodeEnumerable" value="3,4,5,6,7,a,b,c,d,e,f,g,h,j,k,m,n,p,r,s,t,u,v,w,x,y,A,C,D,E,F,G,H,I,J,K,M,N,P,Q,R,S,T,U,V,W,X,Y,“中国”的第二个字是？=国,“你”的拼音是？=ni,请输入“曹操”=曹操,1*9＝?=9,“回”字由几个口组成？=2"/>
    <add key="Length" value="6"/>
    <add key="BendingAngle" value="5"/>
    <add key="FontSize" value="22"/>
    <add key="Padding" value="2"/>
    <add key="ForeColors" value="Black,Red,DarkBlue,Green,Orange,Brown,DarkCyan,Purple"/>
    <add key="BackColor" value="White"/>
    <!--<add key="Fonts" value="宋体,微软雅黑,幼圆,楷体,隶书,Arial,Georgia"/>-->
    <add key="Fonts" value="华文彩云,微软雅黑,Arial,Georgia"/>
    <add key="DebugMode" value="False"/>
  </VerifyCode>
  <appSettings/>
  <connectionStrings/>
  <!--
    有关 web.config 更改的说明，请参见 http://go.microsoft.com/fwlink/?LinkId=235367。

    可在 <httpRuntime> 标记上设置以下特性。
      <system.Web>
        <httpRuntime targetFramework="4.8" />
      </system.Web>
  -->
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.8"/>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Windows"/>
    <!--httpHandlers 配置节用于支持 IIS5 和 IIS7 的经典托管管道模式。-->
    <httpHandlers>
      <add verb="*" path="VerifyCode.ashx" type="Thinksea.WebControls.VerifyCode.VerifyCodeHandler, Thinksea.WebControls.VerifyCode"/>
    </httpHandlers>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <system.webServer>
    <!--handlers 配置节用于支持 IIS7 的集成托管管道模式。-->
    <handlers>
      <add name="VerifyCode.ashx_*" path="VerifyCode.ashx" verb="*" type="Thinksea.WebControls.VerifyCode.VerifyCodeHandler, Thinksea.WebControls.VerifyCode" preCondition="integratedMode"/>
    </handlers>
    <!--
    用于解决当<system.web>\<httpHandlers>与<system.webServer>\<handlers>两个配置节同时存在时，在IIS的“集成的托管管道模式”下报错的问题（注：为了同时兼容“经典托管管道模式”和“集成托管管道模式”两种运行模式，这两个配置节是需要同时存在的。）其错误提示信息如下：
    HTTP 错误 500.23 - Internal Server Error
    检测到在集成的托管管道模式下不适用的 ASP.NET 设置。
    -->
    <validation validateIntegratedModeConfiguration="false"/>
  </system.webServer>
</configuration>